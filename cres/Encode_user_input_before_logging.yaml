doctype: CRE
id: 048-612
links:
- document:
    doctype: CRE
    id: 821-541
    name: Log injection protection
  ltype: Contains
- document:
    doctype: CRE
    id: 760-764
    name: Injection protection
    tags:
    - XSS protection
  ltype: Related
- document:
    doctype: Standard
    hyperlink: https://github.com/OWASP/ASVS/blob/v4.0.3/4.0/en/0x15-V7-Error-Logging.md
    name: ASVS
    section: V7.3.1
    sectionID: Verify that all logging components appropriately encode data to prevent
      log injection.
  ltype: Linked To
- document:
    doctype: Standard
    hyperlink: https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html
    name: OWASP Proactive Controls
    section: C9
  ltype: Linked To
- document:
    doctype: Standard
    hyperlink: https://cwe.mitre.org/data/definitions/117.html
    name: CWE
    section: ''
    sectionID: '117'
  ltype: Linked To
- document:
    doctype: Standard
    hyperlink: https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/10-Business_Logic_Testing/03-Test_Integrity_Checks.html
    name: OWASP Web Security Testing Guide (WSTG)
    section: WSTG-BUSL-03
  ltype: Linked To
- document:
    doctype: Standard
    hyperlink: https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html
    name: OWASP Cheat Sheets
    section: Logging Cheat Sheet
  ltype: Linked To
- document:
    description: 'Upgrade Log4j2 to version 2.17.1 or newer. In previous releases
      (>2.10) this behavior can be mitigated by setting system property ''log4j2.formatMsgNoLookups''
      to ''true'' or by removing the JndiLookup class from the classpath (example:
      zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class).
      Java 8u121 (see https://www.oracle.com/java/technologies/javase/8u121-relnotes.html)
      protects against remote code execution by defaulting ''com.sun.jndi.rmi.object.trustURLCodebase''
      and ''com.sun.jndi.cosnaming.object.trustURLCodebase'' to ''false''.'
    doctype: Tool
    hyperlink: https://github.com/zaproxy/zap-extensions/blob/main/addOns/ascanrulesBeta/src/main/java/org/zaproxy/zap/extension/ascanrulesBeta/Log4ShellScanRule.java
    name: ZAP Rule
    section: Log4Shell (CVE-2021-44228)
    sectionID: 40043-1
    tags:
    - Active
    - 40043-1
    tooltype: Offensive
  ltype: Linked To
- document:
    description: Upgrade Apache Commons Text prior to version 1.10.0 or newer.
    doctype: Tool
    hyperlink: https://github.com/zaproxy/zap-extensions/blob/main/addOns/ascanrulesAlpha/src/main/java/org/zaproxy/zap/extension/ascanrulesAlpha/Text4ShellScanRule.java
    name: ZAP Rule
    section: Text4shell (CVE-2022-42889)
    sectionID: '40047'
    tags:
    - Active
    - '40047'
    tooltype: Offensive
  ltype: Linked To
- document:
    description: Upgrade Log4j2 to version 2.17.1 or newer.
    doctype: Tool
    hyperlink: https://github.com/zaproxy/zap-extensions/blob/main/addOns/ascanrulesBeta/src/main/java/org/zaproxy/zap/extension/ascanrulesBeta/Log4ShellScanRule.java
    name: ZAP Rule
    section: Log4Shell (CVE-2021-45046)
    sectionID: 40043-2
    tags:
    - Active
    - 40043-2
    tooltype: Offensive
  ltype: Linked To
- document:
    doctype: Standard
    hyperlink: https://capec.mitre.org/data/definitions/268.html
    name: CAPEC
    section: Audit Log Manipulation
    sectionID: '268'
    version: '3.9'
  ltype: SAME
- document:
    doctype: Standard
    hyperlink: https://capec.mitre.org/data/definitions/81.html
    name: CAPEC
    section: Web Server Logs Tampering
    sectionID: '81'
    version: '3.9'
  ltype: SAME
- document:
    doctype: Standard
    hyperlink: https://capec.mitre.org/data/definitions/93.html
    name: CAPEC
    section: Log Injection-Tampering-Forging
    sectionID: '93'
    version: '3.9'
  ltype: SAME
name: Encode user input before logging
tags:
- Injection protection
